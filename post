#!/usr/bin/python
import os
import sys
import json
import os.path
from datetime import date

""" Create a new blog post using the template in ./template.html.
    The template is written with the given post title, and the
    current date.
"""

month = [ 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december' ]


def say(msg):
    sys.stdout.write('>> ' + msg + '\n')
    sys.stdout.flush()


def get_dir():
    f = open('blog/entries.json', 'r')
    d = f.read()
    f.close()
    return json.loads(d)


def set_dir(dir):
    f = open('blog/entries.json', 'w')
    f.write(json.dumps(dir))
    f.close()


def make_post():
    given = len( sys.argv )
    
    if given < 2:
        say('Provide a title for your post.')
        return
    
    title = sys.argv[1]
    fname = title.replace(' ', '_')
    
    if given >= 3:
        fname = sys.argv[2]
    
    say('Post title: ' + title)
    
    # Timestamp stuff.
    stamp = date.today()
    m = month[stamp.month - 1]
    dayn = stamp.day
    days = str( dayn )
    dlast = int( days[-1] )
    day = ''
    y = str(stamp.year)
    
    # Figure out whether the day is the n-st, n-nd, n-rd or n-th of the mnth.
    if dayn >= 10 and dayn <= 20:
        day = days + 'th'
    else:
        if dlast == 1:
            day = days + 'st'
        if dlast == 2:
            day = days + 'nd'
        if dlast == 3:
            day = days + 'rd'
        if dlast > 3:
            day = days + 'th'
    
    # file path stuff.
    fold = 'blog/' + y + '/' + m
    fpath = fold + '/' + fname + '.html'
    
    # Add the post to the archive list
    say('Opening index...')
    dir = get_dir()
    dir.insert( 0, { 'href': fpath[5:], 'title': title } )
    set_dir(dir)
    say('Post added to index!')
    
    # Make sure the folder exists.
    if not os.path.exists( 'blog/' + y ):
        os.path.mkdir( 'blog/' + y, 0o755 )
    
    if not os.path.exists( fold ):
        os.path.mkdir( fold, 0o755 )
    
    # Read template
    tf = open( 'blog/template.html', 'r' )
    templ = tf.read()
    tf.close()
    
    # Save template.
    newpost = open( fpath, 'w' )
    newpost.write( templ.format( title, '{0} {1}, {2}'.format( day, m.title(), y ) ) )
    newpost.close()
    
    say('Created post template at ' + fpath)


make_post()
